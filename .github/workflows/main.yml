name: JAVA application Build Publish deploy

on:
  push:
    branches: ["dev"]


jobs:
  Build_Test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout Repository
        uses: actions/checkout@v3
      - name: setup JDK 17 
        uses: actions/setup-java@v3
        with: 
          java-version: '17'
          distribution: 'temurin'
          cashe: maven 
          
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4 
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} 

       
      - name: SonarQube Quality Gate Check
        id: sonarqube-quality-gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

      - name: Fail if Quality Gate Fails
        run: |
          if [[ "${{ steps.sonarqube-quality-gate.outputs.quality-gate-status }}" != "PASSED" ]]; then
            echo "Quality Gate failed! Stopping the pipeline."
            exit 1
          fi     
       

      - name: Build with maven 
        run: mvn clean package 

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
            name: my-app
            path: target/*.jar 

  deploy:
    needs: Build_Test
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: my-app

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to EC2 using SSH
        run: |
          ssh -i key.pem ubuntu@your-ec2-instance "cd /app && git pull && systemctl restart app.service"
            
  
    
      
